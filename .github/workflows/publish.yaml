name: Build/release

on:
    push:

permissions:
  packages: write
  contents: write

jobs:
  tag_job:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/demo'

      - name: Set Git Identity
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/demo'
        run: |
          git config --global user.email "112242530+DysnomiaBot@users.noreply.github.com"
          git config --global user.name "DysnomiaBot"

      - if: github.ref == 'refs/heads/develop'
        name: Tag (Develop)
        run: npm version prepatch

      - if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/demo'
        name: Tag (Main)
        run: npm version patch

      - name: Push
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/demo'
        run: |
          git push
          git push --tags

  sonar_job:
    needs: tag_job

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - run: npm install

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time
        timeout-minutes: 5
        env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build_job:
    needs: sonar_job

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Private packages auth
        run: echo -e "@dysnomia-studio:registry=https://npm.pkg.github.com/\n//npm.pkg.github.com/:_authToken=${{secrets.GHP_TOKEN}}" > .npmrc

      - run: npm install

      - run: rm -rf public/img/_original

      - name: React build
        run: CI=false npm run build

      - uses: actions/upload-artifact@v3
        if: github.ref == 'refs/heads/demo'
        with:
          name: react
          path: build 

  itch_publish_job:
    needs: build_job

    env:
      BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3


      - uses: actions/download-artifact@v3
        with:
          name: react
          path: build/

      - name: Install butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip

          chmod +x butler

          ./butler -V

      - name: Upload build
        run: |
          ./butler push build/ elanis/cosmic-idle:web